<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 縁側ごろごろ</title>
    <link>https://Natsu-dev.github.io/posts/</link>
    <description>Recent content in Posts on 縁側ごろごろ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0900</lastBuildDate><atom:link href="https://Natsu-dev.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CUIの画面で何とかしてスクリーンショットを撮りたい</title>
      <link>https://Natsu-dev.github.io/posts/2021-04-22/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0900</pubDate>
      
      <guid>https://Natsu-dev.github.io/posts/2021-04-22/</guid>
      <description>CUIの画面を直撮りするのはなんだかなぁ たぶんまた今度記事にするとは思うのですが、ちょっとした興味からUbuntu Serverというサーバ用のOSを使ってみています。 普段我々が使っているWindows 10のような、デスクトップ画面とかマウスポインタとかアプリアイコンとかがあるGUIと呼ばれる見た目とは異なって、 基本的にはこういったサーバ用のOSではコマンド入力で操作を行うCUIという見た目のものが使われています。
わかりやすく言うと、Windowsでコマンドプロンプトというアプリを実行してもらえば出てくるような、黒地に白い文字がつらつらと並んでいる感じで動いています。
  操作はキーボードによる文字の入力なので画面には文字しか表示されず、普段のノリでPrintScreenキーを押してそのまま貼り付け！というわけにはいかないのです。残念。 ですがせっかくこうやって普段やってることをブログにしているからには、何とかしてこのUbuntu Serverの画面を撮影したいというものです。
一番簡単なのは画面をスマホのカメラで撮影することなのですが、もっと文字がちゃんと読めるぐらい綺麗に撮影できないものか……というのが目下の悩みだったわけです。
放置されていたキャプチャーボードの出番 そのとき、私に電流走る――――。
キャプチャーボードというものがあります。ゲームの画面をPC上に映すことができるという優れもので、例えばゲーム実況者がゲームの収録に使うときなんかに登場する装置です。
実は今から1年前、ポケモン剣盾にドハマりしていた頃にDiscordで友人に画面を見せながら遊ぼうと考えてそのキャプチャーボードを買っていたのですが、 買ってすぐに音ゲーの開発を初めて以来サッパリSwitchを触る時間がなくなってしまい、そのまま飽きが来たことで結果としてほとんど出番のないままに長い眠りにつくことになったという悲しいものです。
    マジで勿体ない買い物だったかなぁと普通にガッツリ後悔していたのですが、1年以上の時を経て、ある妙案を思いつきます。
　……これ、HDMI出力なら何でもWindows上に表示できるっぽいし、じゃあ当然CUIの画面でもイケるよな………？
　配線して動かしてみる ということで、Ubuntu Serverを実行するRaspberry PiのMini HDMIから出力される映像をそのままキャプチャーボードのin側に送り、 キャプチャーボードをUSBでSurface Pro 6（これはWindows 10が動いている）に接続。
  Windows上でキャプチャーボードの映像を表示するアプリを起動して、Raspberry Piの電源をON。
　…………
　…………
　！！！！！！！！！！！！！！！！
  出るやんけ！！！！！！！！！！！
　  UIのカメラマークを押すとビットマップ形式でキャプチャしてくれるのですが、こんな感じで画質も良好。 lsしたときのディレクトリのような青色の文字が若干潰れ気味でしたが、ブログに載せるには十分の画質でした。最高。
結論 キャプチャボードを使えばCUIの画面もキャプチャできることがわかりました、満足。 ということでUbuntu Serverを使った楽しいことをやる予定なので、その話はまた今度にでも。
余談 デスクトップの背景の絵は知人が描いたものです。めっちゃかわいい。良かったらぜひフォローしてください（ダイマ）。
フランちゃん！ pic.twitter.com/qVBN0hsa1S
&amp;mdash; くろば (@tokonomi0) January 31, 2019  </description>
    </item>
    
    <item>
      <title>Surface Pro 2 (ただし中身はUbuntu)</title>
      <link>https://Natsu-dev.github.io/posts/2021-04-05/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0900</pubDate>
      
      <guid>https://Natsu-dev.github.io/posts/2021-04-05/</guid>
      <description>古いSurfaceってLinuxブートできるんですよ そんな意味の分からない話をされても「？？？」という感情でいっぱいになるのですが、ある私の友人はよくこの話をします。 Microsoft製のPCなんだから当然元々入ってるWindowsしか動かないもんだと完全に思い込んでいたのですが、それは最近のSurfaceの話であって古いものならそうとも限らない模様。
彼は生粋のSurfaceマニアで、Surface ProシリーズをRTから現行の7+まで合計7台所有しているほどの筋金入りです。 そんな有り余るSurfaceにあんなことやこんなことを色々施してはムフフとしている彼ですが、つい先日のこと、 数台所有している（←ここが既に意味不明）Surface Pro 2のうち1台のタッチパネルの一部が反応しなくなってしまったようです。
もう使わないけどタッチパネル以外は正常なので良かったらどうですか、と声を掛けて頂いて私が譲り受けることになりました。
ところでOSどうする？ 受け取る数日前あたりにいきなりこう訊かれたのでびっくりしました。
彼がSurfaceに色々なインストールして楽しんでいる様子はよく見ていたし、 私はといえば諸事情あってLinux系OSの動くPCが欲しいと思ってそういう相談をしていたのもあったし、 まぁ自然っちゃ自然な流れだったのかもしれないけど。
それはそうとしても、Surfaceを譲り渡すにあたってWindows以外のOSを選択肢に持ち出すのは面白すぎるでしょ。
最初はXubuntuをお願いしたのですが、これが何だか調子があまり良くなかったりタブレット端末向きではなかったりしたので、後日無印のUbuntuに入れ替えてもらいました。
初めてのUbuntu 何故かUSBブートができなかったのでめっちゃ大変でしたが、無事にUbuntu 20.04.2 LTSのインストールが完了。
XubuntuでBIOSがGRUBに乗っ取られて、USBメディアから起動できなくなっていたSurface Pro 2、無事救出できました！ pic.twitter.com/1gS87HiAq5
&amp;mdash; shige7 (@windows7_love) March 30, 2021  早速ですが背景はYouTubeにアップした自作曲の動画から持ってきて変更しています。
こんな感じで、Surfaceという文字列とUbuntuという文字列が共存するメッチャ面白い画が撮れます。もう楽しい。   [設定]→[このシステムについて]から端末の情報やOSのバージョンなどを確認できますがここだけ見ても最高ですね。楽しい。   カスタマイズ キーボードショートカットをいくつか設定、変更しています。
 ホームフォルダー: Super + E 端末を起動: Super + T 設定: Super + I 選択領域のスクショをクリップボードにコピー: shift + Super + S  最後のスクショについては、Windows 10で同様の機能をshift + Windows + Sで使用しているためです。 全然関係ない余談ですがUbuntuではWindowsでいうWindowsキーのことをSuperキーっていうんですね。
それとキーボードの配列が英語になってると半角/全角キーとかが使えなくてしんどいので日本語にしておきます。
参考：Ubuntu で日本語キーボードレイアウト - Qiita</description>
    </item>
    
    <item>
      <title>GitHub PagesとHugoを使ってブログを作ってみた</title>
      <link>https://Natsu-dev.github.io/posts/2021-02-28/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0900</pubDate>
      
      <guid>https://Natsu-dev.github.io/posts/2021-02-28/</guid>
      <description>はじめまして。Natsuです、ふぉって名前も使ってます。 ここではだいたい趣味のことを書くと思います。 最初なので、個人的なメモ書きも兼ねてこのブログの作り方をまとめておきます。
GitHub Pagesでブログが作れるらしい 何となしにネットの海をサーフィンしていると、ふと立ち寄ったブログのURLが~.github.ioでした。
へぇ～GitHub Pagesでブログが作れるんだ～。わたしもやりたい。
ググってみると、静的サイトジェネレータを使うとMarkdownで書いたファイルを元にWebページを生成できるみたいです。 『GitHub Pages ブログ』と検索したところ静的サイトジェネレータの名前がいくつか出てきたのですが、なんとなくおもしろそうだったのでHugoを使ってみることにします。
Hugoを使って実際に作ってみる Hugoの導入 まずHugo Extendedをインストールするのですが、Windowsでは例えばChocolateyなどのパッケージマネージャを使うので、まずはそちらをインストールしておきます。
chocoコマンドが使えるようになったら、Hugo Extendedをインストールします。
GitHubの準備とThemeの導入 続いてブログ作成のための環境構築をします。以下の記事を参考にさせて頂きました。
3分で GitHub にブログを作る (Hugo + GitHub Pages) - Qiita
HugoではThemeと呼ばれるページレイアウトのテンプレートのようなものがHugo Themesで色々公開されていて、 『Hugo Future Imperfect』というテーマが個人的にとても好きなので導入します。
先ほどの環境構築の記事ではconfig.tomlを編集するようになっています。 themes/hugo-future-imperfect/exampleSiteにあるconfig.tomlをコピーして、ブログ本体のディレクトリに元々あるconfig.tomlに上書きしておきます。
以降、themesディレクトリ以下のファイルを変更する際は全てブログ本体の同名ディレクトリにコピーしたものを使用しています。
config.tomlをカスタマイズする 自分のブログに合わせてconfig.tomlを編集していきます。ここではブログのタイトルや説明、 自分のSNSアカウントへのリンクや記事の共有ボタンの有効化などブログの基本的な要素を編集できるようになっているので、好きなようにカスタマイズします。
特に変わったことはしていませんが、1つあるとすればアイコンは私がGitHubで使っているものをURLで参照して持ってくるようにしています。 https://github.com/&amp;lt;USERNAME&amp;gt;.pngとするとアイコン画像を取得できます。 画像が思ったよりでかかったのでサイズは100pxとしておきます。ここまでの設定でconfig.tomlは以下のようになります。
# This appears at the top of the sidebar above params.intro.header. # A width of less than 100px is recommended from a design perspective. [params.intro.pic] src = &amp;#34;https://github.</description>
    </item>
    
  </channel>
</rss>
