<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PC on 縁側ごろごろ</title>
    <link>https://Natsu-dev.github.io/categories/pc/</link>
    <description>Recent content in PC on 縁側ごろごろ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 31 Dec 2021 00:04:00 +0900</lastBuildDate><atom:link href="https://Natsu-dev.github.io/categories/pc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi 4B でちゃんと動くMinecraft Serverを作りたい</title>
      <link>https://Natsu-dev.github.io/posts/2021-12-31/</link>
      <pubDate>Fri, 31 Dec 2021 00:04:00 +0900</pubDate>
      
      <guid>https://Natsu-dev.github.io/posts/2021-12-31/</guid>
      <description>大晦日の深夜に RTA in Japan を視聴しながらの更新です。今ちょうどやってた Cook, Serve, Delicious! 3?! というゲームの RTA メッチャ面白かったです。
今回ですが、Raspberry Pi 4B でもプレイ時にストレスの少ない自宅サーバーを構築できないものか…と色々試してみて、とりあえず形になったので書き残しておこうという感じです。
サーバー構築の方針 ゲーマー仲間とマイクラのマルチで一緒に遊ぶために24時間稼働の自宅サーバーを構築することにしたのですが、当初使っていた中古の Intel Core i7-3770 搭載のデスクトップPCでは、動かしっぱなしにするとなると電気代が気になる上に、だいぶ使い込まれていた中古なため外出中にトラブルが発生する可能性がありました。
なので、以前に新品で購入して使っていたラズパイを使うことにします。
  過去にこのブログでは『CUIの画面で何とかしてスクリーンショットを撮りたい』、OUCRCでは『ぼっちは寂しいのでプログラミングで彼女（概念）を生み出してみた』などで登場したものです。
余談ですが、OUCRCの方の彼女（概念）の記事が、知らないうちに部内の記事コンテストで技術部門 3位に入賞していたようです。嬉しいです。どうして。
  　Raspberry Pi のメリット、デメリット デスクトップPCと比較したときの Raspberry Pi でマイクラ自宅サーバーを構築するメリットは以下のようになると思います。
 消費電力が小さい 置き場所に困らない 安価で手軽に構築できる  逆にデメリットは以下のような感じでしょう。
 CPU、メモリなどの基本的なマシンスペックが超厳しい Micro SD カードが起動ドライブのため読み書きが遅く、また耐久性が心配  私の場合はデスクトップPCのサーバーが中古のため信頼性があまり高くないというのもラズパイを選択した理由になります。
各種デメリットへの対処 ということで、ラズパイでサーバーを構築する上で発生するデメリットにどうにか対処する方法について考えていきます。 といってもソフトウェア的な部分だけではどうにもならないレベルで性能不足なので、一部追加のお買い物をしてラズパイをサイボーグ化するところまでやります。本気出していこうな。
① CPU、メモリなどの基本的なマシンスペックが超厳しい 正直に言ってコレが一番やばいです。マイクラサーバーの構築に関して言えるのは、低消費電力のためにそのマシンスペックを完全に犠牲にしているのだぞということです。覚悟は良いか…？
仕方ないので可能な限りの軽量化を試みるのですが、軽量化のために検討できる部分としては OS をどうするかとサーバーアプリケーションをどうするかという話になってくると思います。
OSの検討 例えば軽量な Linux のディストリビューションと言えばArch Linuxとかがありますね。必要なモンは自分で入れてセットアップしてくれよな！ というシンプルイズベストを地で行くような軽量ディストリビューションです。
実は Arch Linux のウェブドキュメントでもサーバーとしての運用が十分に可能であることが示されており正直メチャクチャ魅力的だったのですが、結論から申し上げると導入難易度が高いという点でひとまず先送りにしました。ドキュメントがとんでもなく充実しているので、もっと勉強して実際に使ってみて、ある程度ちゃんと扱えるレベルに達したら導入してみようかと思います。</description>
    </item>
    
    <item>
      <title>CUIの画面で何とかしてスクリーンショットを撮りたい</title>
      <link>https://Natsu-dev.github.io/posts/2021-04-22/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0900</pubDate>
      
      <guid>https://Natsu-dev.github.io/posts/2021-04-22/</guid>
      <description>CUIの画面を直撮りするのはなんだかなぁ たぶんまた今度記事にするとは思うのですが、ちょっとした興味からUbuntu Serverというサーバ用のOSを使ってみています。 普段我々が使っているWindows 10のような、デスクトップ画面とかマウスポインタとかアプリアイコンとかがあるGUIと呼ばれる見た目とは異なって、 基本的にはこういったサーバ用のOSではコマンド入力で操作を行うCUIという見た目のものが使われています。
わかりやすく言うと、Windowsでコマンドプロンプトというアプリを実行してもらえば出てくるような、黒地に白い文字がつらつらと並んでいる感じで動いています。
  操作はキーボードによる文字の入力なので画面には文字しか表示されず、普段のノリでPrintScreenキーを押してそのまま貼り付け！というわけにはいかないのです。残念。 ですがせっかくこうやって普段やってることをブログにしているからには、何とかしてこのUbuntu Serverの画面を撮影したいというものです。
一番簡単なのは画面をスマホのカメラで撮影することなのですが、もっと文字がちゃんと読めるぐらい綺麗に撮影できないものか……というのが目下の悩みだったわけです。
放置されていたキャプチャーボードの出番 そのとき、私に電流走る――――。
キャプチャーボードというものがあります。ゲームの画面をPC上に映すことができるという優れもので、例えばゲーム実況者がゲームの収録に使うときなんかに登場する装置です。
実は今から1年前、ポケモン剣盾にドハマりしていた頃にDiscordで友人に画面を見せながら遊ぼうと考えてそのキャプチャーボードを買っていたのですが、 買ってすぐに音ゲーの開発を初めて以来サッパリSwitchを触る時間がなくなってしまい、そのまま飽きが来たことで結果としてほとんど出番のないままに長い眠りにつくことになったという悲しいものです。
    マジで勿体ない買い物だったかなぁと普通にガッツリ後悔していたのですが、1年以上の時を経て、ある妙案を思いつきます。
　……これ、HDMI出力なら何でもWindows上に表示できるっぽいし、じゃあ当然CUIの画面でもイケるよな………？
　配線して動かしてみる ということで、Ubuntu Serverを実行するRaspberry PiのMini HDMIから出力される映像をそのままキャプチャーボードのin側に送り、 キャプチャーボードをUSBでSurface Pro 6（これはWindows 10が動いている）に接続。
  Windows上でキャプチャーボードの映像を表示するアプリを起動して、Raspberry Piの電源をON。
　…………
　…………
　！！！！！！！！！！！！！！！！
  出るやんけ！！！！！！！！！！！
　  UIのカメラマークを押すとビットマップ形式でキャプチャしてくれるのですが、こんな感じで画質も良好。 lsしたときのディレクトリのような青色の文字が若干潰れ気味でしたが、ブログに載せるには十分の画質でした。最高。
結論 キャプチャボードを使えばCUIの画面もキャプチャできることがわかりました、満足。 ということでUbuntu Serverを使った楽しいことをやる予定なので、その話はまた今度にでも。
余談 デスクトップの背景の絵は知人が描いたものです。めっちゃかわいい。良かったらぜひフォローしてください（ダイマ）。
フランちゃん！ pic.twitter.com/qVBN0hsa1S
&amp;mdash; 雲粥＊くろば (@kumokayu) January 31, 2019  </description>
    </item>
    
  </channel>
</rss>
